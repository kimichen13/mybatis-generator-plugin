buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.10.1"
    }
}

plugins {
    id "com.gradle.plugin-publish" version "0.10.1"
    id 'java-gradle-plugin'
    id 'groovy'
}

group 'com.thinkimi.gradle'
version '2.2'
description "Mybatis Gradle Generator Plugin"

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "com.gradle.plugin-publish"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile 'org.mybatis:mybatis:3.5.2'
    testCompile "org.testcontainers:spock:1.13.0"
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

gradlePlugin {
    // Define the plugin
    plugins {
        mbGenerator {
            id = 'com.thinkimi.gradle.MybatisGenerator'
            implementationClass = 'com.thinkimi.gradle.MybatisGeneratorPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}


pluginBundle {
    website = 'https://github.com/kimichen13/mybatis-generator-plugin.git'
    vcsUrl = 'https://github.com/kimichen13/mybatis-generator-plugin.git'
    description = "${project.description}"
    tags = ['mybatis', 'generator']

    plugins {
        MybatisGenerator {
            id = 'com.thinkimi.gradle.MybatisGenerator'
            displayName = 'Mybatis Gradle Generator Plugin'
        }
    }
}


