plugins {
    id "com.gradle.plugin-publish" version "0.14.0"
    id 'java-gradle-plugin'
    id 'groovy'
}

group 'com.qqviaja.gradle'
version '2.5'
description "Mybatis Gradle Generator Plugin"

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "com.gradle.plugin-publish"

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    testImplementation 'org.mybatis:mybatis:3.5.7'
    testImplementation 'org.testcontainers:spock:1.16.0'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

gradlePlugin {
    // Define the plugin
    plugins {
        MybatisGenerator {
            id = 'com.qqviaja.gradle.MybatisGenerator'
            implementationClass = 'com.qqviaja.gradle.MybatisGeneratorPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
//    jvmArgs '--enable-preview'
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}


pluginBundle {
    website = 'https://github.com/kimichen13/mybatis-generator-plugin.git'
    vcsUrl = 'https://github.com/kimichen13/mybatis-generator-plugin.git'
    description = "${project.description}"
    tags = ['mybatis', 'generator']

    plugins {
        MybatisGenerator {
            displayName = 'Mybatis Gradle Generator Plugin'
        }
    }

    mavenCoordinates {
        groupId = "com.qqviaja.gradle"
        artifactId = "mybatis-generator-plugin"
        version = "2.5"
    }

}


